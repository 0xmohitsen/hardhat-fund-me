{
  "address": "0xBdBd91F4B9c92b864f7589603dF87626ECD5fa9d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x260b3167e361948406a6582bac61d885fee26b1c219dcbc781d0f479063deb6f",
  "receipt": {
    "to": null,
    "from": "0xA1C49cd2a7Be879516cc5fe1B7E9770C9cC4C329",
    "contractAddress": "0xBdBd91F4B9c92b864f7589603dF87626ECD5fa9d",
    "transactionIndex": 27,
    "gasUsed": "819615",
    "logsBloom": "0x
    "blockHash": "0xebb8c1dfdc696e5ad0bdb9347cb1943ce30e5716f2fec37627a95ae81b32179b",
    "transactionHash": "0x260b3167e361948406a6582bac61d885fee26b1c219dcbc781d0f479063deb6f",
    "logs": [],
    "blockNumber": 7016818,
    "cumulativeGasUsed": "3583697",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "3ccf03b84d3c5cf2b97284e95dc33fe1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.27;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        addressToAmountFunded[msg.sender] = msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0x3c8adaa5ddf9ef9415ab45b0837163742621805609177ec27645489a33d41275\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xbd7f575e78a45dc3e02ed2c06abab2fbf5b7892a14f1c89f29e849250579c33f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610e5f380380610e5f8339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610d06806101596000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610794565b61050d565b6040516100d891906107da565b60405180910390f35b3480156100ed57600080fd5b506100f6610525565b60405161010391906107da565b60405180910390f35b34801561011857600080fd5b50610121610532565b60405161012e9190610854565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610558565b604051610163919061087e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108c5565b61057e565b6040516101a0919061087e565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bd90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061094f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610358576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103fd5760006001828154811061037e5761037d61096f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061035b565b50600067ffffffffffffffff8111156104195761041861099e565b5b6040519080825280602002602001820160405280156104475781602001602082028036833780820191505090505b506001908051906020019061045d92919061068a565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610484906109fe565b60006040518083038185875af1925050503d80600081146104c1576040519150601f19603f3d011682016040523d82523d6000602084013e6104c6565b606091505b505090508061050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190610a5f565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061058e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c9836105f9565b90506000670de0b6b3a764000085836105e29190610aae565b6105ec9190610b1f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190610bdd565b5050509150506402540be400816106829190610c58565b915050919050565b828054828255906000526020600020908101928215610703579160200282015b828111156107025782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106aa565b5b5090506107109190610714565b5090565b5b8082111561072d576000816000905550600101610715565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076182610736565b9050919050565b61077181610756565b811461077c57600080fd5b50565b60008135905061078e81610768565b92915050565b6000602082840312156107aa576107a9610731565b5b60006107b88482850161077f565b91505092915050565b6000819050919050565b6107d4816107c1565b82525050565b60006020820190506107ef60008301846107cb565b92915050565b6000819050919050565b600061081a61081561081084610736565b6107f5565b610736565b9050919050565b600061082c826107ff565b9050919050565b600061083e82610821565b9050919050565b61084e81610833565b82525050565b60006020820190506108696000830184610845565b92915050565b61087881610756565b82525050565b6000602082019050610893600083018461086f565b92915050565b6108a2816107c1565b81146108ad57600080fd5b50565b6000813590506108bf81610899565b92915050565b6000602082840312156108db576108da610731565b5b60006108e9848285016108b0565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610939601b836108f2565b915061094482610903565b602082019050919050565b600060208201905081810360008301526109688161092c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109e86000836109cd565b91506109f3826109d8565b600082019050919050565b6000610a09826109db565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a49600b836108f2565b9150610a5482610a13565b602082019050919050565b60006020820190508181036000830152610a7881610a3c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ab9826107c1565b9150610ac4836107c1565b9250828202610ad2816107c1565b91508282048414831517610ae957610ae8610a7f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b2a826107c1565b9150610b35836107c1565b925082610b4557610b44610af0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b6f81610b50565b8114610b7a57600080fd5b50565b600081519050610b8c81610b66565b92915050565b6000819050919050565b610ba581610b92565b8114610bb057600080fd5b50565b600081519050610bc281610b9c565b92915050565b600081519050610bd781610899565b92915050565b600080600080600060a08688031215610bf957610bf8610731565b5b6000610c0788828901610b7d565b9550506020610c1888828901610bb3565b9450506040610c2988828901610bc8565b9350506060610c3a88828901610bc8565b9250506080610c4b88828901610b7d565b9150509295509295909350565b6000610c6382610b92565b9150610c6e83610b92565b9250828202610c7c81610b92565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cb457610cb3610a7f565b5b8282058414831517610cc957610cc8610a7f565b5b509291505056fea2646970667358221220bcc655e8229bdcba18ce5f26c85c63ab1bfc33ca2ca0a148d5dd5a4d73af205c64736f6c634300081b0033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d1565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610794565b61050d565b6040516100d891906107da565b60405180910390f35b3480156100ed57600080fd5b506100f6610525565b60405161010391906107da565b60405180910390f35b34801561011857600080fd5b50610121610532565b60405161012e9190610854565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610558565b604051610163919061087e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108c5565b61057e565b6040516101a0919061087e565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105bd90919063ffffffff16565b1015610229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102209061094f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610358576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103fd5760006001828154811061037e5761037d61096f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808060010191505061035b565b50600067ffffffffffffffff8111156104195761041861099e565b5b6040519080825280602002602001820160405280156104475781602001602082028036833780820191505090505b506001908051906020019061045d92919061068a565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610484906109fe565b60006040518083038185875af1925050503d80600081146104c1576040519150601f19603f3d011682016040523d82523d6000602084013e6104c6565b606091505b505090508061050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190610a5f565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061058e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c9836105f9565b90506000670de0b6b3a764000085836105e29190610aae565b6105ec9190610b1f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066b9190610bdd565b5050509150506402540be400816106829190610c58565b915050919050565b828054828255906000526020600020908101928215610703579160200282015b828111156107025782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106aa565b5b5090506107109190610714565b5090565b5b8082111561072d576000816000905550600101610715565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076182610736565b9050919050565b61077181610756565b811461077c57600080fd5b50565b60008135905061078e81610768565b92915050565b6000602082840312156107aa576107a9610731565b5b60006107b88482850161077f565b91505092915050565b6000819050919050565b6107d4816107c1565b82525050565b60006020820190506107ef60008301846107cb565b92915050565b6000819050919050565b600061081a61081561081084610736565b6107f5565b610736565b9050919050565b600061082c826107ff565b9050919050565b600061083e82610821565b9050919050565b61084e81610833565b82525050565b60006020820190506108696000830184610845565b92915050565b61087881610756565b82525050565b6000602082019050610893600083018461086f565b92915050565b6108a2816107c1565b81146108ad57600080fd5b50565b6000813590506108bf81610899565b92915050565b6000602082840312156108db576108da610731565b5b60006108e9848285016108b0565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610939601b836108f2565b915061094482610903565b602082019050919050565b600060208201905081810360008301526109688161092c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109e86000836109cd565b91506109f3826109d8565b600082019050919050565b6000610a09826109db565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a49600b836108f2565b9150610a5482610a13565b602082019050919050565b60006020820190508181036000830152610a7881610a3c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ab9826107c1565b9150610ac4836107c1565b9250828202610ad2816107c1565b91508282048414831517610ae957610ae8610a7f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b2a826107c1565b9150610b35836107c1565b925082610b4557610b44610af0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b6f81610b50565b8114610b7a57600080fd5b50565b600081519050610b8c81610b66565b92915050565b6000819050919050565b610ba581610b92565b8114610bb057600080fd5b50565b600081519050610bc281610b9c565b92915050565b600081519050610bd781610899565b92915050565b600080600080600060a08688031215610bf957610bf8610731565b5b6000610c0788828901610b7d565b9550506020610c1888828901610bb3565b9450506040610c2988828901610bc8565b9350506060610c3a88828901610bc8565b9250506080610c4b88828901610b7d565b9150509295509295909350565b6000610c6382610b92565b9150610c6e83610b92565b9250828202610c7c81610b92565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cb457610cb3610a7f565b5b8282058414831517610cc957610cc8610a7f565b5b509291505056fea2646970667358221220bcc655e8229bdcba18ce5f26c85c63ab1bfc33ca2ca0a148d5dd5a4d73af205c64736f6c634300081b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 323,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 326,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 328,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 338,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)104"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)104": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}